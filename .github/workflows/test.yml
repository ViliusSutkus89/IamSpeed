# test.yml
#
# Copyright (C) 2022, 2024 https://www.ViliusSutkus89.com/i-am-speed/
#
# I am Speed is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

name: test
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/test.yml'

permissions:
  actions: none
  checks: none
  contents: none
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

env:
  applicationId: com.viliussutkus89.iamspeed

jobs:
  releaseBuild:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Generate ephemeral keystore
        run: keytool -genkey -noprompt -alias alias1 -dname "CN=$applicationId.ephemeral, OU=EphemeralSignatures, O=ViliusSutkus89.com, L=Kaunas, S=Kaunas, C=LT" -keystore app/$applicationId.ephemeral.jks -keypass 123456 -keyalg RSA -keysize 4096 -validity 1 -storepass 123456

      - run: ./gradlew assembleRelease lintRelease -Ptest_build
        env:
          SIGNING_KEYFILE: ${{env.applicationId}}.ephemeral.jks
          SIGNING_PASS: 123456
          SIGNING_ALIAS: alias1

      - name: artifact release builds
        uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      - name: Artifact lint report
        uses: actions/upload-artifact@v4
        with:
          path: app/build/reports/lint-results-release.html
          name: lintResults
          if-no-files-found: error

  debugBuild:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - run: ./gradlew assembleDebug -Ptest_build

      # Needs to be tarballed, because regular artifacts and caches take forever
      - name: prepare app/build
        run: tar -cf app-build.tar app/build

      - name: artifact app/build
        uses: actions/upload-artifact@v4
        with:
          name: app-build.tar
          path: app-build.tar
          if-no-files-found: error

  test:
    needs: debugBuild
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # Emulator matrix generated by ci-scripts/emulator_matrix_generator.py
          - {'api_level': 35, 'api_type_target': 'google_apis', 'arch': 'x86_64'}
          - {'api_level': 34, 'api_type_target': 'aosp_atd', 'arch': 'x86_64'}
          - {'api_level': 33, 'api_type_target': 'aosp_atd', 'arch': 'x86_64'}
          - {'api_level': 32, 'api_type_target': 'aosp_atd', 'arch': 'x86_64'}
          - {'api_level': 31, 'api_type_target': 'aosp_atd', 'arch': 'x86_64'}
          - {'api_level': 30, 'api_type_target': 'aosp_atd', 'arch': 'x86_64'}
          - {'api_level': 30, 'api_type_target': 'aosp_atd', 'arch': 'x86'}
          - {'api_level': 29, 'api_type_target': 'default', 'arch': 'x86_64'}
          - {'api_level': 29, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 28, 'api_type_target': 'default', 'arch': 'x86_64'}
          - {'api_level': 28, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 27, 'api_type_target': 'default', 'arch': 'x86_64'}
          - {'api_level': 27, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 26, 'api_type_target': 'default', 'arch': 'x86_64'}
          - {'api_level': 26, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 25, 'api_type_target': 'default', 'arch': 'x86_64'}
          - {'api_level': 25, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 24, 'api_type_target': 'default', 'arch': 'x86_64'}
          - {'api_level': 24, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 23, 'api_type_target': 'default', 'arch': 'x86_64'}
          - {'api_level': 23, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 22, 'api_type_target': 'default', 'arch': 'x86_64'}
          - {'api_level': 22, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 21, 'api_type_target': 'default', 'arch': 'x86_64'}
          - {'api_level': 21, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 19, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 18, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 17, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 16, 'api_type_target': 'default', 'arch': 'x86'}
          - {'api_level': 15, 'api_type_target': 'default', 'arch': 'x86'}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Download app/build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build.tar
      - run: tar -xf app-build.tar

      - name: setup python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: pip3 install adbPullAs

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          api-level: ${{ matrix.api_level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.api_type_target }}
          sdcard-path-or-size: 1G
          disk-size: 8G
          script: |
            mkdir -p testResults/TestScreenshots
            adb logcat -c || true
            adb logcat > testResults/logcat.txt &

            adb shell screencap /data/local/tmp/beforeTests.png || true
            adb pull /data/local/tmp/beforeTests.png testResults/TestScreenshots/ || true

            ./gradlew connectedCheck || touch sorry_but_tests_are_failing
            # Depending on API version, TestScreenshots could be in any of these dirs

            adb pull /data/local/tmp/TestScreenshots testResults/TestScreenshots/ || true
            adbPullAs $applicationId /data/data/$applicationId/cache/TestScreenshots /data/user/0/$applicationId/cache/TestScreenshots /sdcard/Android/data/$applicationId/cache/TestScreenshots testResults/ || true

            adb shell screencap /data/local/tmp/afterTests.png || true
            adb pull /data/local/tmp/afterTests.png testResults/TestScreenshots/ || true

            mv app/build/reports/androidTests/connected testResults/
            mv app/build/outputs/androidTest-results testResults/

            test ! -f sorry_but_tests_are_failing

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: testResults-${{ matrix.api_level }}-${{ matrix.arch }}-${{ matrix.api_type_target }}
          path: testResults
          if-no-files-found: error
